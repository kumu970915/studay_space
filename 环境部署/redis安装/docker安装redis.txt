获取 redis 镜像
docker pull redis
 
查看本地镜像
docker images


从官网获取 redis.conf 配置文件 	
	修改默认配置文件 		
	bind 127.0.0.1 #注释掉这部分，这是限制redis只能本地访问
	protected-mode no #默认yes，开启保护模式，限制为本地访问
	daemonize no#默认no，改为yes意为以守护进程方式启动，可后台运行，除非kill进程（可选），改为yes会使配置文件方式启动redis失败
	dir  ./ #输入本地redis数据库存放文件夹（可选）
	appendonly yes #redis持久化（可选）
启动命令	
 #挂载配置文件
 docker run -dit -p 6379:6379 --name redis -v /home/kumu/Desktop/install-redis/redis.conf:/etc/redis/redis.conf -v /usr/local/docker/data:/data -d redis redis-server /etc/redis/redis.conf --appendonly yes
 # 不挂载配置文件：  
 docker run --name redis -p 6379:6379 -d --restart=always redis redis-server --appendonly yes --requirepass "这是密码"
		 -p 6379:6379 端口映射：前表示主机部分，：后表示容器部分。
		--name myredis  指定该容器名称，查看和进行操作都比较方便。
		-v 挂载目录，规则与端口映射相同。
		-d redis 表示后台启动redis
		redis-server /etc/redis/redis.conf  以配置文件启动redis，加载容器内的conf文件，最终找到的是挂载的目录/home/kumu/Desktop/install-redis/redis.conf
		appendonly yes 开启redis 持久化
 进入redis
 docker exec -it redis /bin/bash  #
 
 
 
 docker run -p 6379:6379 --privileged=true --name redis -v /home/kumu/Desktop/install-redis/redis.conf:/etc/redis/redis.conf -v /usr/local/docker/data:/data -d docker.io/redis:6.0 redis-server /etc/redis/redis.conf --appendonly yes
 
 
 dir /docker/redis/db/